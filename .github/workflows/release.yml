# .github/workflows/release.yml
name: Release EchoS3

# This workflow runs ONLY on pushes to the 'main' branch.
on:
  push:
    branches:
      - main

jobs:
  release:
    name: Create Release and Update Tap
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create releases and commit to the repo
      pull-requests: write # Needed to create pull requests in the tap repo

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          # Fetch all history so that git-cliff can generate a changelog
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Generate Changelog
        id: changelog
        run: |
          echo "# Release Notes for v${{ steps.version.outputs.version }}" > RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "## Changes since last release:" >> RELEASE_NOTES.md
          git log $(git describe --tags --abbrev=0 2>/dev/null || echo HEAD~10)..HEAD --pretty=format:"- %s" | grep -v "Merge" >> RELEASE_NOTES.md

      - name: Get next version
        id: version
        uses: reecetech/version-increment@2024.4.2
        with:
          scheme: semver
          increment: patch

      - name: Build Release Binaries
        run: |
          GOOS=darwin GOARCH=amd64 go build -ldflags="-X main.Version=${{ steps.version.outputs.version }}" -o echos3-darwin-amd64
          GOOS=darwin GOARCH=arm64 go build -ldflags="-X main.Version=${{ steps.version.outputs.version }}" -o echos3-darwin-arm64
          GOOS=linux GOARCH=amd64 go build -ldflags="-X main.Version=${{ steps.version.outputs.version }}" -o echos3-linux-amd64
          GOOS=windows GOARCH=amd64 go build -ldflags="-X main.Version=${{ steps.version.outputs.version }}" -o echos3-windows-amd64.exe

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: 'v${{ steps.version.outputs.version }}'
          name: 'Release v${{ steps.version.outputs.version }}'
          body_path: 'RELEASE_NOTES.md'
          files: |
            echos3-darwin-amd64
            echos3-darwin-arm64
            echos3-linux-amd64
            echos3-windows-amd64.exe

      - name: Update Homebrew Tap
        uses: mislav/bump-homebrew-formula-action@v3
        env:
          # The GitHub token is provided as an environment variable
          COMMITTER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # The name of the formula
          formula-name: echos3
          # The path to your formula file in the tap repository
          formula-path: echos3.rb
          # The tap repository in the format 'owner/repo'
          homebrew-tap: jpwhite3/homebrew-echos3
          # The commit message for the tap repository
          commit-message: 'chore: update echos3 formula to v{{version}}'
